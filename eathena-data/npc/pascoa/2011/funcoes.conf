/**
 * Funções para o evento de Pascoa 2013
 * Criado por Diogo_RBG para o Halloween
 * Adaptado por Xtreem para a pascoa
 */

/**
 * Retorna qual o id do evento... eventos: 1..15, 0 para nenhum.
 * @return @evento informando o id do evento ativo. 0, caso nenhum esteja ativo.
 */
function	script	getEvento	{
	set @evento, 0;

	set @mes, gettime(6);
	set @dia, gettime(5);
	set @hora, gettime(3);
	set @min, gettime(2);
	if (@mes!=3 || @dia<27 || @dia>31 || @min>45) return;

	if (@dia==27 && @hora==11) set @evento, 1;
	if (@dia==27 && @hora==16) set @evento, 2;
	if (@dia==27 && @hora==22) set @evento, 3;
	if (@dia==28 && @hora==11) set @evento, 4;
	if (@dia==28 && @hora==16) set @evento, 5;
	if (@dia==28 && @hora==22) set @evento, 6;
	if (@dia==29 && @hora==11) set @evento, 7;
	if (@dia==29 && @hora==16) set @evento, 8;
	if (@dia==29 && @hora==22) set @evento, 9;
	if (@dia==30 && @hora==11) set @evento, 10;
	if (@dia==30 && @hora==16) set @evento, 11;
	if (@dia==30 && @hora==22) set @evento, 12;
	if (@dia==31 && @hora==11) set @evento, 13;
	if (@dia==31 && @hora==16) set @evento, 14;
	if (@dia==31 && @hora==22) set @evento, 15;
	return;
}

/**
 * Retorna qual o id do evento como global temporária... eventos: 1..15, 0 para nenhum.
 * @return @evento informando o id do evento ativo. 0, caso nenhum esteja ativo.
 */
function	script	getEvento2	{
	set $@evento, 0;

	set $@mes, gettime(6);
	set $@dia, gettime(5);
	set $@hora, gettime(3);
	set $@min, gettime(2);
	if ($@mes!=3 || $@dia<27 || $@dia>31 || $@min>45) return;

	if ($@dia==27 && $@hora==11) set $@evento, 1;
	if ($@dia==27 && $@hora==16) set $@evento, 2;
	if ($@dia==27 && $@hora==22) set $@evento, 3;
	if ($@dia==28 && $@hora==11) set $@evento, 4;
	if ($@dia==28 && $@hora==16) set $@evento, 5;
	if ($@dia==28 && $@hora==22) set $@evento, 6;
	if ($@dia==29 && $@hora==11) set $@evento, 7;
	if ($@dia==29 && $@hora==16) set $@evento, 8;
	if ($@dia==29 && $@hora==22) set $@evento, 9;
	if ($@dia==30 && $@hora==11) set $@evento, 10;
	if ($@dia==30 && $@hora==16) set $@evento, 11;
	if ($@dia==30 && $@hora==22) set $@evento, 12;
	if ($@dia==31 && $@hora==11) set $@evento, 13;
	if ($@dia==31 && $@hora==16) set $@evento, 14;
	if ($@dia==31 && $@hora==22) set $@evento, 15;
	return;
}

/**
 * Script para dropar as sementes durante os horários de evento e
 * script para classificação no top15.
 *
 * @var @evento informa qual dos evento está ativo. 0, caso nenhum esteja.
 * Primeiro deve executar a função getEvento: 'callfunc "getEvento";'
 * @date segunda, 26 de setembro de 2011
 * @author Diogo_RBG - http://diogorbg.blogspot.com
 */
function	script	dropSemente	{
	// Uma única mensagem quando o evento Top15 estiver inativo.
	if(@evento==0 && $@PASC4_evento2!=@evento)
		announce "* O evento 'Top15 de Pascoa' está INATIVO.", 0;
	set $@PASC4_evento2, @evento;

	// Retorna se o evento Top15 não estiver ativo.
	if(@evento==0) return;

	// Rand para conseguir um ovo dourado.
	set @tmp, rand(100);
	if(@tmp>=6) return;

	// Verifica dia do evento.
	if(PASC4_dia!=@dia) set PASC4_diaItem, 0;
	if(PASC4_dia!=@dia) set PASC4_dia, @dia;
	// Verifica evento
	if(PASC4_evt!=@evento) set PASC4_evtItem, 0;
	if(PASC4_evt!=@evento) set PASC4_evt, @evento;

	// Aumenta o placar do evento e verifica se foi o melhor placar do dia.
	set PASC4_evtItem, PASC4_evtItem+1;
	if(PASC4_evtItem <= PASC4_diaItem) message strcharinfo(0), "^.^";
	if(PASC4_evtItem <= PASC4_diaItem) getitem 4046, 1;
	if(PASC4_evtItem <= PASC4_diaItem) return;
	// Aumenta o placar do dia e do top15 tbm!
	set PASC4_diaItem, PASC4_evtItem;
	set PASC4_item, PASC4_item+1;
	getitem 3226, 1;
	message strcharinfo(0), "Aeee!";

	// Identifica o primeiro jogador a conseguir um item no top15.
	if($@PASC4_evento==@evento) goto _pular0;
		set $@PASC4_evento, @evento;
		announce "* '"+strcharinfo(0)+"' coletou o primeiro Ovo Dourado do Evento!", 0;
		gmcommand "@l #informacao '"+strcharinfo(0)+"' coletou o primeiro Ovo Dourado do Evento!";
	_pular0:

	// Se puder entrar no final do placar || ser o primeiro a entrar na lista
	if ($PASC4_vetPlacar[$PASC4_numPlacar-1]<PASC4_item && $PASC4_numPlacar!=0) goto _pular1; //< Se não puder: _pula1
	//else
		set $PASC4_nomPlacar$[$PASC4_numPlacar], strcharinfo(0);
		set $PASC4_vetPlacar[$PASC4_numPlacar], PASC4_item;
		set $PASC4_lvlPlacar[$PASC4_numPlacar], BaseLevel;
		if ($PASC4_numPlacar<15) set $PASC4_numPlacar, $PASC4_numPlacar+1;
		return;
	_pular1:

	// Buscar nome no placar
	set @tmp, $PASC4_numPlacar; //< O padão é o ultimo do placar
	set @i, -1;
	_loop1: set @i,@i+1; if(@i>=$PASC4_numPlacar) goto _fimLoop1;
		if ($PASC4_nomPlacar$[@i]!=strcharinfo(0)) goto _loop1;
		//else
			set $PASC4_vetPlacar[@i], PASC4_item;
			set $PASC4_lvlPlacar[@i], BaseLevel;
			set @tmp, @i;
			goto _fimLoop1;
		//goto _loop1;
	_fimLoop1:

	// Subir no placar
	set @i, @tmp; //< Indice encontrado no loop1
	set @tmp, 0;
	_loop2: set @i,@i-1; if(@i<0) goto _fimLoop2;
		if ($PASC4_vetPlacar[@i]>=PASC4_item) set @i, -1;
			if(@i<0) goto _fimLoop2;
		//else
			set @tmp, 1;
			set $PASC4_nomPlacar$[@i+1], $PASC4_nomPlacar$[@i];
			set $PASC4_vetPlacar[@i+1], $PASC4_vetPlacar[@i];
			set $PASC4_lvlPlacar[@i+1], $PASC4_lvlPlacar[@i];
			set $PASC4_nomPlacar$[@i], strcharinfo(0);
			set $PASC4_vetPlacar[@i], PASC4_item;
			set $PASC4_lvlPlacar[@i], BaseLevel;
		goto _loop2;
	_fimLoop2:

	if (@tmp==1 && $PASC4_numPlacar<15) set $PASC4_numPlacar, $PASC4_numPlacar+1;
	return;
}
