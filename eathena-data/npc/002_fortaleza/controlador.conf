// $autoevento_controle

// [0]: Id global do evento

// [1]: Número do grupo detentor do Pilar número 1 (0 = sem dono - Min = 1 / Max = 10)
// [2]: Número do grupo detentor do Pilar número 2 (0 = sem dono - Min = 1 / Max = 10)
// (...)
// [12]: Número do grupo detentor do Pilar número 12 (0 = sem dono - Min = 1 / Max = 10)

// [13]: Quantidade de Pilares derrubados pelo grupo número 1 (Max = 12)
// [14]: Quantidade de Pilares derrubados pelo grupo número 2 (Max = 12)
// (...)
// [22]: Quantidade de Pilares derrubados pelo grupo número 10 (Max = 12)

// [23]: Quantidade de Vitórias em PVP do grupo número 1
// [24]: Quantidade de Vitórias em PVP do grupo número 2
// (...)
// [32]: Quantidade de Vitórias em PVP do grupo número 10

// [33]: Quantidade de pilares do(s) grupo(s) vencedor(es)
// [34]: Quantidade de vitórias em PVP do(s) grupo(s) vencedor(es)

// $autoevento_strings$

// [1] a [10]: Nomes dos grupos
// [11] a [20]: Nomes dos grupos ganhadores

002.gat,107,115,0	script	#controle	45,{

	goto L_End;

OnIniciar:
	monster "002.gat", 93, 105, "", 1014, 1, "#controle::OnPilar1Death";
	monster "002.gat", 93, 100, "", 1014, 1, "#controle::OnPilar2Death";
	monster "002.gat", 93, 95, "", 1014, 1, "#controle::OnPilar3Death";
	monster "002.gat", 93, 90, "", 1014, 1, "#controle::OnPilar4Death";
	monster "002.gat", 93, 85, "", 1014, 1, "#controle::OnPilar5Death";
	monster "002.gat", 105, 105, "", 1014, 1, "#controle::OnPilar6Death";
	monster "002.gat", 105, 100, "", 1014, 1, "#controle::OnPilar7Death";
	monster "002.gat", 105, 95, "", 1014, 1, "#controle::OnPilar8Death";
	monster "002.gat", 105, 90, "", 1014, 1, "#controle::OnPilar9Death";
	monster "002.gat", 105, 85, "", 1014, 1, "#controle::OnPilar10Death";
	monster "002.gat", 101, 85, "", 1014, 1, "#controle::OnPilar11Death";
	monster "002.gat", 97, 85, "", 1014, 1, "#controle::OnPilar12Death";
	set $@autoevento_status, 1;
	set $autoevento_controle[0], $autoevento_controle[0] + 1;
	cleararray $autoevento_strings$[11], "", 20;
	goto L_End;

OnTimer5000:
	setnpctimer 0;
	if ($@autoevento_status) goto L_Tempo_Evento;
	if (gettime(4) == $@autoevento_dia && gettime(3) == $@autoevento_horainicio && gettime(2) == $@autoevento_minutosinicio) goto OnIniciar;
	goto L_End;

L_Tempo_Evento:
	set $@teste, $@teste + 5;
	if ($@teste >= 60) goto L_Fim_Evento;
	// if (gettime(3) == $@autoevento_horafim && gettime(2) == $@autoevento_minutosfim) goto L_Fim_Evento;
	goto L_End;

OnPilar1Death:
	if (grupo_existente && $autoevento_controle[1] == grupo_existente) goto L_Pilar1_Out;
	announce "O Pilar de Aries foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[1], grupo_existente;

L_Pilar1_Out:
	monster "002.gat", 93, 105, "", 1014, 1, "#controle::OnPilar1Death";
	goto L_End;

OnPilar2Death:
	if (grupo_existente && $autoevento_controle[2] == grupo_existente)  goto L_Pilar2_Out;
	announce "O Pilar de Touro foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[2], grupo_existente;

L_Pilar2_Out:
	monster "002.gat", 93, 100, "", 1014, 1, "#controle::OnPilar2Death";
	goto L_End;

OnPilar3Death:
	if (grupo_existente && $autoevento_controle[3] == grupo_existente)  goto L_Pilar3_Out;
	announce "O Pilar de Gêmeos foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[3], grupo_existente;

L_Pilar3_Out:
	monster "002.gat", 93, 95, "", 1014, 1, "#controle::OnPilar3Death";
	goto L_End;

OnPilar4Death:
	if (grupo_existente && $autoevento_controle[4] == grupo_existente)  goto L_Pilar4_Out;
	announce "O Pilar de Cancer foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[4], grupo_existente;

L_Pilar4_Out:
	monster "002.gat", 93, 90, "", 1014, 1, "#controle::OnPilar4Death";
	goto L_End;

OnPilar5Death:
	if (grupo_existente && $autoevento_controle[5] == grupo_existente)  goto L_Pilar5_Out;
	announce "O Pilar de Leao foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[5], grupo_existente;

L_Pilar5_Out:
	monster "002.gat", 93, 85, "", 1014, 1, "#controle::OnPilar5Death";
	goto L_End;

OnPilar6Death:
	if (grupo_existente && $autoevento_controle[6] == grupo_existente)  goto L_Pilar6_Out;
	announce "O Pilar de Virgem foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[6], grupo_existente;

L_Pilar6_Out:
	monster "002.gat", 105, 105, "", 1014, 1, "#controle::OnPilar6Death";
	goto L_End;

OnPilar7Death:
	if (grupo_existente && $autoevento_controle[7] == grupo_existente)  goto L_Pilar7_Out;
	announce "O Pilar de Libra foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[7], grupo_existente;

L_Pilar7_Out:
	monster "002.gat", 105, 100, "", 1014, 1, "#controle::OnPilar7Death";
	goto L_End;

OnPilar8Death:
	if (grupo_existente && $autoevento_controle[8] == grupo_existente)  goto L_Pilar8_Out;
	announce "O Pilar de Escorpião foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[8], grupo_existente;

L_Pilar8_Out:
	monster "002.gat", 105, 95, "", 1014, 1, "#controle::OnPilar8Death";
	goto L_End;

OnPilar9Death:
	if (grupo_existente && $autoevento_controle[9] == grupo_existente)  goto L_Pilar9_Out;
	announce "O Pilar de Sagitário foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[9], grupo_existente;

L_Pilar9_Out:
	monster "002.gat", 105, 90, "", 1014, 1, "#controle::OnPilar9Death";
	goto L_End;

OnPilar10Death:
	if (grupo_existente && $autoevento_controle[10] == grupo_existente)  goto L_Pilar10_Out;
	announce "O Pilar de Capricórnio foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[10], grupo_existente;

L_Pilar10_Out:
	monster "002.gat", 105, 85, "", 1014, 1, "#controle::OnPilar10Death";
	goto L_End;

OnPilar11Death:
	if (grupo_existente && $autoevento_controle[11] == grupo_existente)  goto L_Pilar11_Out;
	announce "O Pilar de Aquário foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[11], grupo_existente;

L_Pilar11_Out:
	monster "002.gat", 101, 85, "", 1014, 1, "#controle::OnPilar11Death";
	goto L_End;

OnPilar12Death:
	if (grupo_existente && $autoevento_controle[12] == grupo_existente)  goto L_Pilar12_Out;
	announce "O Pilar de Peixes foi derrubado pela família " + getpartyname(getcharid(1)), 0;
	set $autoevento_controle[12], grupo_existente;

L_Pilar12_Out:
	monster "002.gat", 97, 85, "", 1014, 1, "#controle::OnPilar12Death";
	goto L_End;

OnPCKilledEvent:
	// Colocar uma restrição de local/mapa
	attachrid(@killerrid);
	if ($@autoevento_status == 0) goto L_End;
	if (controle_autoevento && controle_autoevento == $autoevento_controle[0]) goto L_Matou;
	goto L_End;

L_Matou:
	announce strcharinfo(0) + " derrotou um adversário no campo de batalha.", 0;
	percentheal 100, 0;
	set $autoevento_controle[22+grupo_existente], $autoevento_controle[22+grupo_existente] + 1;
	goto L_End;

L_Fim_Evento:
	set $@loop, 0;
	callsub S_Atualiza_Contagem_Pilares;
	set $@loop, 12;
	callsub S_Contagem;
	set $@loop, 12;
	set $@loop_ganhadores, 10;
	callsub S_Identificacao;

L_Limpar:
	killmonster "002.gat", "#controle::OnPilar1Death";
	killmonster "002.gat", "#controle::OnPilar2Death";
	killmonster "002.gat", "#controle::OnPilar3Death";
	killmonster "002.gat", "#controle::OnPilar4Death";
	killmonster "002.gat", "#controle::OnPilar5Death";
	killmonster "002.gat", "#controle::OnPilar6Death";
	killmonster "002.gat", "#controle::OnPilar7Death";
	killmonster "002.gat", "#controle::OnPilar8Death";
	killmonster "002.gat", "#controle::OnPilar9Death";
	killmonster "002.gat", "#controle::OnPilar10Death";
	killmonster "002.gat", "#controle::OnPilar11Death";
	killmonster "002.gat", "#controle::OnPilar12Death";
	set $@autoevento_status, 0;
	set $@teste, 0;
	announce "Grupos Participantes do evento: ", 0;
	announce $autoevento_Strings$[1], 0;
	announce $autoevento_Strings$[2], 0;
	announce $autoevento_Strings$[3], 0;
	announce $autoevento_Strings$[4], 0;
	announce $autoevento_Strings$[5], 0;
	announce $autoevento_Strings$[6], 0;
	announce $autoevento_Strings$[7], 0;
	announce $autoevento_Strings$[8], 0;
	announce $autoevento_Strings$[9], 0;
	announce $autoevento_Strings$[10], 0;
	announce "Grupos ganhadores do evento: ", 0;
	announce $autoevento_Strings$[11], 0;
	announce $autoevento_Strings$[12], 0;
	announce $autoevento_Strings$[13], 0;
	announce $autoevento_Strings$[14], 0;
	announce $autoevento_Strings$[15], 0;
	announce $autoevento_Strings$[16], 0;
	announce $autoevento_Strings$[17], 0;
	announce $autoevento_Strings$[18], 0;
	announce $autoevento_Strings$[19], 0;
	announce $autoevento_Strings$[20], 0;
	announce "Pilares derrubados pelo grupo ganhador: " + $autoevento_controle[33], 0;
	announce "Vitórias em pvp do grupo ganhador: " + $autoevento_controle[34], 0;
	cleararray $autoevento_controle[1], 0, 34;
	cleararray $autoevento_strings$[0], "", 10;
	goto L_End;

S_Atualiza_Contagem_Pilares:
	set $@loop, $@loop + 1;
	if ($@loop > 12) return;
	if ($autoevento_controle[$@loop]) set $autoevento_controle[$autoevento_controle[$@loop]+12], $autoevento_controle[$autoevento_controle[$@loop]+12] + 1;
	goto S_Atualiza_Contagem_Pilares;

S_Contagem:
	set $@loop, $@loop + 1;
	if ($@loop > 22) return;
	if ($@loop < 22 && $autoevento_controle[$@loop] >= $autoevento_controle[$@loop + 1] && $autoevento_controle[$@loop] >= $autoevento_controle[33]) goto L_Atualiza_Placar;
	if ($@loop == 22 && $autoevento_controle[$@loop] >= $autoevento_controle[33]) goto L_Atualiza_Placar;
	goto S_Contagem;

L_Atualiza_Placar:
	if ($autoevento_controle[$@loop] > $autoevento_controle[33]) set $autoevento_controle[33], $autoevento_controle[$@loop];
	if ($autoevento_controle[$@loop + 10] > $autoevento_controle[34]) set $autoevento_controle[34], $autoevento_controle[$@loop + 10];
	goto S_Contagem;

S_Identificacao:
	set $@loop, $@loop + 1;
	if ($@loop > 22) return;
	if ($autoevento_controle[$@loop] == $autoevento_controle[33] && $autoevento_controle[$@loop + 10] == $autoevento_controle[34]) goto L_Atualiza_Nomes;
	goto S_Identificacao;

L_Atualiza_Nomes:
	set $@loop_ganhadores, $@loop_ganhadores + 1;
	set $autoevento_strings$[$@loop_ganhadores], $autoevento_strings$[$@loop-12];
	goto S_Identificacao;

L_End:
	set $@loop, 0;
	set $@loop_ganhadores, 0;
	end;

onInit:
	// O timer roda permanentemente. A partir dele vai ser checado quando vai iniciar o evento (sábado, 16:00?)
	initnpctimer;
}
